
// Generated by Akka gRPC. DO NOT EDIT.
package io.cloudstate.protocol;

import akka.grpc.ProtobufSerializer;
import akka.grpc.javadsl.GoogleProtobufSerializer;
import akka.grpc.javadsl.Metadata;
import akka.grpc.GrpcServiceException;
import io.cloudstate.protocol.StatelessFunction;
import io.grpc.Status;

public interface StatelessFunctionPowerApi extends StatelessFunction {
  
  java.util.concurrent.CompletionStage<io.cloudstate.protocol.FunctionProto.FunctionReply> handleUnary(io.cloudstate.protocol.FunctionProto.FunctionCommand in, Metadata metadata);
  
  java.util.concurrent.CompletionStage<io.cloudstate.protocol.FunctionProto.FunctionReply> handleStreamedIn(akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionCommand, akka.NotUsed> in, Metadata metadata);
  
  akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionReply, akka.NotUsed> handleStreamedOut(io.cloudstate.protocol.FunctionProto.FunctionCommand in, Metadata metadata);
  
  akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionReply, akka.NotUsed> handleStreamed(akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionCommand, akka.NotUsed> in, Metadata metadata);
  

  
  default java.util.concurrent.CompletionStage<io.cloudstate.protocol.FunctionProto.FunctionReply> handleUnary(io.cloudstate.protocol.FunctionProto.FunctionCommand in) {
    throw new GrpcServiceException(Status.UNIMPLEMENTED);
  }
  
  default java.util.concurrent.CompletionStage<io.cloudstate.protocol.FunctionProto.FunctionReply> handleStreamedIn(akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionCommand, akka.NotUsed> in) {
    throw new GrpcServiceException(Status.UNIMPLEMENTED);
  }
  
  default akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionReply, akka.NotUsed> handleStreamedOut(io.cloudstate.protocol.FunctionProto.FunctionCommand in) {
    throw new GrpcServiceException(Status.UNIMPLEMENTED);
  }
  
  default akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionReply, akka.NotUsed> handleStreamed(akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionCommand, akka.NotUsed> in) {
    throw new GrpcServiceException(Status.UNIMPLEMENTED);
  }
  

  static String name = "cloudstate.function.StatelessFunction";

  public static class Serializers {
    
      public static ProtobufSerializer<io.cloudstate.protocol.FunctionProto.FunctionCommand> FunctionCommandSerializer = new GoogleProtobufSerializer<>(io.cloudstate.protocol.FunctionProto.FunctionCommand.class);
    
      public static ProtobufSerializer<io.cloudstate.protocol.FunctionProto.FunctionReply> FunctionReplySerializer = new GoogleProtobufSerializer<>(io.cloudstate.protocol.FunctionProto.FunctionReply.class);
    
  }
}
