
// Generated by Akka gRPC. DO NOT EDIT.
package io.cloudstate.protocol;


import akka.grpc.javadsl.SingleResponseRequestBuilder;
import akka.grpc.javadsl.StreamResponseRequestBuilder;


public abstract class StatelessFunctionClientPowerApi {
  
    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer handleUnary(io.cloudstate.protocol.FunctionProto.FunctionCommand) if possible.
     */
    
      public SingleResponseRequestBuilder<io.cloudstate.protocol.FunctionProto.FunctionCommand, io.cloudstate.protocol.FunctionProto.FunctionReply> handleUnary()
    
    {
        throw new UnsupportedOperationException();
    }

    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer handleStreamedIn(io.cloudstate.protocol.FunctionProto.FunctionCommand) if possible.
     */

      public SingleResponseRequestBuilder<akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionCommand, akka.NotUsed>, io.cloudstate.protocol.FunctionProto.FunctionReply> handleStreamedIn()

    {
        throw new UnsupportedOperationException();
    }

    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer handleStreamedOut(io.cloudstate.protocol.FunctionProto.FunctionCommand) if possible.
     */

      public StreamResponseRequestBuilder<io.cloudstate.protocol.FunctionProto.FunctionCommand, io.cloudstate.protocol.FunctionProto.FunctionReply> handleStreamedOut()

    {
        throw new UnsupportedOperationException();
    }

    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer handleStreamed(io.cloudstate.protocol.FunctionProto.FunctionCommand) if possible.
     */

      public StreamResponseRequestBuilder<akka.stream.javadsl.Source<io.cloudstate.protocol.FunctionProto.FunctionCommand, akka.NotUsed>, io.cloudstate.protocol.FunctionProto.FunctionReply> handleStreamed()

    {
        throw new UnsupportedOperationException();
    }
  
}
