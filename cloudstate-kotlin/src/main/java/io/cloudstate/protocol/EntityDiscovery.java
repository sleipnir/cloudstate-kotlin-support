
// Generated by Akka gRPC. DO NOT EDIT.
package io.cloudstate.protocol;

import akka.grpc.ProtobufSerializer;
import akka.grpc.javadsl.GoogleProtobufSerializer;

/**
 * Entity discovery service.
 */
public interface EntityDiscovery {
  
  /**
   * Discover what entities the user function wishes to serve.
   */
  java.util.concurrent.CompletionStage<io.cloudstate.protocol.EntityProto.EntitySpec> discover(io.cloudstate.protocol.EntityProto.ProxyInfo in);
  
  /**
   * Report an error back to the user function. This will only be invoked to tell the user function
   * that it has done something wrong, eg, violated the protocol, tried to use an entity type that
   * isn't supported, or attempted to forward to an entity that doesn't exist, etc. These messages
   * should be logged clearly for debugging purposes.
   */
  java.util.concurrent.CompletionStage<com.google.protobuf.Empty> reportError(io.cloudstate.protocol.EntityProto.UserFunctionError in);
  

  static String name = "cloudstate.EntityDiscovery";

  public static class Serializers {
    
      public static ProtobufSerializer<io.cloudstate.protocol.EntityProto.ProxyInfo> ProxyInfoSerializer = new GoogleProtobufSerializer<>(io.cloudstate.protocol.EntityProto.ProxyInfo.class);
    
      public static ProtobufSerializer<io.cloudstate.protocol.EntityProto.UserFunctionError> UserFunctionErrorSerializer = new GoogleProtobufSerializer<>(io.cloudstate.protocol.EntityProto.UserFunctionError.class);
    
      public static ProtobufSerializer<io.cloudstate.protocol.EntityProto.EntitySpec> EntitySpecSerializer = new GoogleProtobufSerializer<>(io.cloudstate.protocol.EntityProto.EntitySpec.class);
    
      public static ProtobufSerializer<com.google.protobuf.Empty> EmptySerializer = new GoogleProtobufSerializer<>(com.google.protobuf.Empty.class);
    
  }
}
